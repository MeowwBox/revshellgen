name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: python -m build
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        prev_tag=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -z "$prev_tag" ]; then
          echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
        else
          # Generate changelog between tags
          changelog=$(git log --pretty=format:"- %s" $prev_tag..HEAD)
          
          # Save to GitHub output with proper multiline handling
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: RevShellGen v${{ steps.get_version.outputs.VERSION }}
        body: |
          ## RevShellGen v${{ steps.get_version.outputs.VERSION }}
          
          ### üì¶ Installation
          
          Install from PyPI:
          ```bash
          pip install revshellgen==${{ steps.get_version.outputs.VERSION }}
          ```
          
          Install from source:
          ```bash
          pip install https://github.com/${{ github.repository }}/archive/${{ github.ref }}.tar.gz
          ```
          
          ### üìù Changelog
          
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ### üìé Assets
          
          - Source code (zip)
          - Source code (tar.gz)
          - Python wheel (.whl)
          - Source distribution (.tar.gz)
        draft: false
        prerelease: false
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/revshellgen-${{ steps.get_version.outputs.VERSION }}-py3-none-any.whl
        asset_name: revshellgen-${{ steps.get_version.outputs.VERSION }}-py3-none-any.whl
        asset_content_type: application/zip
    
    - name: Upload Source Distribution
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/revshellgen-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_name: revshellgen-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/gzip
