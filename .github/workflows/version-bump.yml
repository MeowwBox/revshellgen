name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Get current version
      id: get_version
      run: |
        current_version=$(grep "version = " pyproject.toml | head -1 | cut -d'"' -f2)
        echo "current_version=$current_version" >> $GITHUB_OUTPUT
        echo "Current version: $current_version"
    
    - name: Calculate new version
      id: new_version
      run: |
        current="${{ steps.get_version.outputs.current_version }}"
        IFS='.' read -r major minor patch <<< "$current"
        
        if [ "${{ github.event.inputs.version_type }}" = "major" ]; then
          major=$((major + 1))
          minor=0
          patch=0
        elif [ "${{ github.event.inputs.version_type }}" = "minor" ]; then
          minor=$((minor + 1))
          patch=0
        else
          patch=$((patch + 1))
        fi
        
        new_version="${major}.${minor}.${patch}"
        echo "new_version=$new_version" >> $GITHUB_OUTPUT
        echo "New version: $new_version"
    
    - name: Update version in files
      run: |
        new_version="${{ steps.new_version.outputs.new_version }}"
        
        # Update pyproject.toml
        sed -i "s/version = \".*\"/version = \"$new_version\"/" pyproject.toml
        
        # Update __init__.py
        sed -i "s/__version__ = \".*\"/__version__ = \"$new_version\"/" revshellgen/__init__.py
        
        # Update setup_pypi.py if it exists
        if [ -f setup_pypi.py ]; then
          sed -i "s/version=\".*\"/version=\"$new_version\"/" setup_pypi.py
        fi
    
    - name: Commit and tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add -A
        git commit -m "Bump version to ${{ steps.new_version.outputs.new_version }}"
        git tag -a "v${{ steps.new_version.outputs.new_version }}" -m "Version ${{ steps.new_version.outputs.new_version }}"
    
    - name: Push changes
      run: |
        git push origin HEAD:master
        git push origin "v${{ steps.new_version.outputs.new_version }}"
